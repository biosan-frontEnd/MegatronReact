"use strict";function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}var precacheConfig=[["/index.html","e19c3dfec0999241ef04d3179fefe9df"],["/static/css/main.2a54fecf.css","b233265b8ee0983aa83892fd0b09aca1"],["/static/js/0.50c0a27a.chunk.js","a07b82c8657b4756d9ddf020ff7285bc"],["/static/js/main.6f0144a6.js","9fba0bb656d89cdf8f5c3e61ddb0c45f"],["/static/media/check-circle-o.8fcd4064.svg","8fcd40649ad781eb98809cf0bc89f407"],["/static/media/check-circle.8fc1ec56.svg","8fc1ec56e889c1147d696e5963a450b6"],["/static/media/check.efbf7e37.svg","efbf7e37227aa57d9242af267ec13b8c"],["/static/media/cross-circle-o.ffda5311.svg","ffda5311e51d2bf410fabb5276f6145f"],["/static/media/cross-circle.8c32ffa0.svg","8c32ffa0994d3b2bb0d46dc87817515d"],["/static/media/cross.8b489506.svg","8b489506e2da0b0e10265decb5ad8853"],["/static/media/down.905ad1bd.svg","905ad1bd92f47b30cd8a3a29cea06476"],["/static/media/ellipsis-circle.8ea392b4.svg","8ea392b45faa8f2375f533a4a8b7373b"],["/static/media/ellipsis.43b22230.svg","43b22230eeabfa72f0181f56a182f987"],["/static/media/exclamation-circle.85d3db72.svg","85d3db72959331e84afa1b9405bc65c2"],["/static/media/info-circle.22c4e2aa.svg","22c4e2aa99d3df8a7d7ea4bef72a6b5c"],["/static/media/koubei-o.8ac7e6bc.svg","8ac7e6bcd30fae3b4179bb882d3c1c4a"],["/static/media/koubei.d77ccd6b.svg","d77ccd6ba47814f730ca7912907056a8"],["/static/media/left.b00417af.svg","b00417af93ce9f6e54e7586128fc71ee"],["/static/media/loading.8c7d2cb1.svg","8c7d2cb1201096b04624f41c8abe3d3c"],["/static/media/logo.5d5d9eef.svg","5d5d9eefa31e5e13a6610d9fa7a283bb"],["/static/media/question-circle.2348fa70.svg","2348fa7027ad81781c3d2ce36482bd6d"],["/static/media/right.2eecac96.svg","2eecac96d7b3c7d15006db564cc7a19c"],["/static/media/search.04b4852f.svg","04b4852f93459909b60962c31db5cb01"],["/static/media/up.b56083f8.svg","b56083f85776898dd429acdb0c3f617f"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,a){var t=new URL(e);return"/"===t.pathname.slice(-1)&&(t.pathname+=a),t.toString()},cleanResponse=function(e){return e.redirected?("body"in e?Promise.resolve(e.body):e.blob()).then(function(a){return new Response(a,{headers:e.headers,status:e.status,statusText:e.statusText})}):Promise.resolve(e)},createCacheKey=function(e,a,t,c){var n=new URL(e);return c&&n.pathname.match(c)||(n.search+=(n.search?"&":"")+encodeURIComponent(a)+"="+encodeURIComponent(t)),n.toString()},isPathWhitelisted=function(e,a){if(0===e.length)return!0;var t=new URL(a).pathname;return e.some(function(e){return t.match(e)})},stripIgnoredUrlParameters=function(e,a){var t=new URL(e);return t.hash="",t.search=t.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(e){return a.every(function(a){return!a.test(e[0])})}).map(function(e){return e.join("=")}).join("&"),t.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var a=e[0],t=e[1],c=new URL(a,self.location),n=createCacheKey(c,hashParamName,t,/\.\w{8}\./);return[c.toString(),n]}));self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(e){return setOfCachedUrls(e).then(function(a){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(t){if(!a.has(t)){var c=new Request(t,{credentials:"same-origin"});return fetch(c).then(function(a){if(!a.ok)throw new Error("Request for "+t+" returned a response with status "+a.status);return cleanResponse(a).then(function(a){return e.put(t,a)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var a=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(e){return e.keys().then(function(t){return Promise.all(t.map(function(t){if(!a.has(t.url))return e.delete(t)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(e){if("GET"===e.request.method){var a,t=stripIgnoredUrlParameters(e.request.url,ignoreUrlParametersMatching);(a=urlsToCacheKeys.has(t))||(t=addDirectoryIndex(t,"index.html"),a=urlsToCacheKeys.has(t));!a&&"navigate"===e.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],e.request.url)&&(t=new URL("/index.html",self.location).toString(),a=urlsToCacheKeys.has(t)),a&&e.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(t)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(a){return console.warn('Couldn\'t serve response for "%s" from cache: %O',e.request.url,a),fetch(e.request)}))}});